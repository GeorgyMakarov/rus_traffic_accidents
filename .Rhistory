install.packages("XML")
library(XML)
xmldataframe <- xmlToDataFrame("/raw_data/20170101_20170115.xml")
result <- xmlParse(file = "/raw_data/20170101_20170115.xml")
# try reading XML file
getwd()
result <- xmlParse(file = "raw_data/20170101_20170115.xml")
xmldataframe <- xmlToDataFrame("raw_data/20170101_20170115.xml")
print(xmldataframe)
xmldataframe <- xmlToDataFrame("raw_data/test.xml")
head(xmldataframe)
library(jsonlite)
jsondata <- fromJSON("https://безопасныедороги.рф/opendata/7710474375-crash2017/data-20191001T0358-structure-20180314T1826.json")
jsondata <- fromJSON("raw_data/test_2017.json")
names(jsondata)
head(jsondata)
dim(jsondata)
sum(jsondata$fatalities_amount)
sum(as.numeric(jsondata$fatalities_amount))
test_2017 <- read.csv(file = "raw_data/test_2017.csv")
test_2017 <- read.csv(file = "raw_data/test_2017.csv", header = FALSE, sep = ";")
head(test_2017)
doc <- xmlTreeParse("raw_data/test.xml")
head(doc)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[1]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
doc <- xmlParse(file = "raw_data/test.xml")
xml.df <- xmlToDataFrame(file = "raw_data/test.xml")
xml.df <- xmlToDataFrame("raw_data/test.xml")
fix(xml.df)
print(xml.df)
View(xml.df)
xml.df1 <- xmlToDataFrame("raw_data/2017_1.xml")
View(xml.df1)
# Prerequisite libraries
library(reshape2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
# try reading XML file
library(XML)
xml.df1 <- xmlToDataFrame("raw_data/2017_1.xml")
view(xml.df1)
View(xml.df1)
xml.df1 <- xml.df1 %>% filter(!(is.na(DTPV)))
View(xml.df1)
xml.df1 <- xml.df1 %>% filter(!(is.na(DTPV))) %>% select(-text)
View(xml.df1)
?separate
head(xml.df1)
test1 <- xml.df1 %>% separate(infoDtp, sep = "[^[:alnum:]]+")
test1 <- xml.df1 %>% separate(infoDtp, into = c("test1", "test2"),sep = "[^[:alnum:]]+")
View(xml.df1)
View(test1)
double_quote <- "\"" # or '"'
single_quote <- '\'' # or "'"
single_quote
single_quote
double_quote
View(xml.df1)
# loop for reading .xml files
files <- list.files("./raw_data")
files
files <- as.list(files)
files
length(files)
setwd("./raw_data")
getwd()
for (i in 1:length(files)) {
setwd("./raw_data")
xml_df[i] <- xmlToDataFrame(files[[i]])
}
for (i in 1:length(files)) {
xml_df[i] <- xmlToDataFrame(files[[i]])
}
xml_df <- list()
for (i in 1:length(files)) {
xml_df[i] <- xmlToDataFrame(files[[i]])
}
warnings()
setwd("./raw_data")
getwd()
for (i in 1:length(files)) {
xml_df[i] <- xmlToDataFrame(files[[i]])
}
rm(test1, xml_df, xml.df1)
rm(double_quote, single_quote, i)
library(readr)
list_file <- list.files(pattern = "*.xml") %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
head(list_file)
View(list_file)
setwd("./")
getwd()
setwd(".")
getwd()
setwd("")
setwd("C:/Users/Георгий/Documents/GitHub/rus_traffic_accidents/")
getwd()
# Prerequisite libraries
library(reshape2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(XML)
library(readr)
list_file <- list.files(pattern = "*.xml") %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
list_file <- list.files(pattern = "./raw_data/*.xml") %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
list_file <- list.files("./raw_data", pattern = "*.xml") %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
list_file <- list.files("./raw_data", pattern = "*.xml") %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
# loop for reading .xml files
files <- list.files("./raw_data")
list_file <- files %>% lapply(xmlToDataFrame, stringsAsFactors = F) %>%
bind_rows
list_file <- setwd("./raw_data") %>% list.files(pattern = "*.xml") %>%
lapply(xmlToDataFrame, stringsAsFactors = F) %>% bind_rows
setwd("./raw_data")
getwd()
list_file <- list.files(pattern = "*.xml") %>%
lapply(xmlToDataFrame, stringsAsFactors = F) %>% bind_rows
setwd("C:/Users/Георгий/Documents/GitHub/rus_traffic_accidents/")
getwd()
list_file <- list_file %>% filter(!(is.na(DTPV))) %>% select(-text)
View(list_file)
list_file <- list_file %>%
filter(!(is.na(DTPV))) %>% select(-text) %>% arrange(date, time)
list_file <- list_file %>%
filter(!(is.na(DTPV))) %>% select(-text) %>% arrange(date)
list_file <- list_file %>%
filter(!(is.na(DTPV))) %>% select(-text)
list_file <- list_file %>% arrange(date)
View(list_file)
list_file <- list_file %>% arrange(date, time)
setwd("./raw_data")
list_file <- list.files(pattern = "*.xml") %>%
lapply(xmlToDataFrame, stringsAsFactors = F) %>% bind_rows
setwd("C:/Users/Георгий/Documents/GitHub/rus_traffic_accidents/")
list_file <- list_file %>%
filter(!(is.na(DTPV))) %>% select(-text)
list_file$date <- dmy(list_file$date)
str(list_file)
xmldf <- list_file %>% arrange(date, time)
View(xmldf)
list_file$time <- hm(time)
list_file$time <- as.POSIXct(list_file$time, format = "%H:%M")
str(list_file)
xmldf <- list_file %>% arrange(date, time)
rm(list_df)
rm(list_file)
rm(files)
summary(xmldf)
# transform columns to numeric
xmldf$KTS <- as.numeric(xmldf$KTS)
# check data summary
# need to transfor to num: KTS, KUCH, kartId, POG, RAN, rowNum
summary(xmldf)
xmldf$KTS <- as.numeric(xmldf$KTS)
xmldf$KUCH <- as.numeric(xmldf$KUCH)
xmldf$POG <- as.numeric(xmldf$POG)
xmldf$RAN <- as.numeric(xmldf$RAN)
# check data summary
# need to transfor to num: KTS, KUCH, POG, RAN
summary(xmldf)
?complete.cases
complete.cases(xmldf$DTPV)
# Prerequisite libraries
library(reshape2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(XML)
library(readr)
# loop for reading .xml files
files <- list.files("./raw_data")
files <- as.list(files)
setwd("./raw_data")
list_file <- list.files(pattern = "*.xml") %>%
lapply(xmlToDataFrame, stringsAsFactors = F) %>% bind_rows
setwd("C:/Users/Георгий/Documents/GitHub/rus_traffic_accidents/")
# filter columns in the top of the table - they contain general info not needed
# for the analysis, because this infor tells us about region - St. Pete, but we
# already have filtered St. Pete.
list_file <- list_file %>%
filter(!(is.na(DTPV))) %>% select(-text)
list_file$date <- dmy(list_file$date)
list_file$time <- as.POSIXct(list_file$time, format = "%H:%M")
xmldf <- list_file %>% arrange(date, time)
rm(list_file)
# check data summary
# need to transfor to num: KTS, KUCH, POG, RAN
summary(xmldf)
# transform columns to numeric
xmldf$KTS <- as.numeric(xmldf$KTS)
xmldf$KUCH <- as.numeric(xmldf$KUCH)
xmldf$POG <- as.numeric(xmldf$POG)
xmldf$RAN <- as.numeric(xmldf$RAN)
complete.cases(xmldf$DTPV)
complete.cases(xmldf)
sum(complete.cases(xmldf))
sum(complete.cases(xmldf$date))
sum(complete.cases(xmldf$district))
sum(complete.cases(xmldf$infoDtp))
x <- c("apple", "banana", "pear")
str_view(x, "an")
library(stringi)
str_view(x, "an")
library(stringr)
x <- c("apple", "banana", "pear")
str_view(x, "an")
str_view(x, ".n.")
View(xmldf)
?gsub
?substr
?sub
test1 <- xmldf$infoDtp %>% separate(infoDtp, into = c("test1", "test2"),sep = "[^[:alnum:]]+")
test1 <- xmldf %>% separate(infoDtp, into = c("test1", "test2"),sep = "[^[:alnum:]]+")
View(test1)
test1 <- xmldf %>% separate(infoDtp, into = c("test1", "test2"),sep = "[^\d+")
test1 <- xmldf %>% separate(infoDtp, into = c("test1", "test2"),sep = "\d")
test1 <- xmldf %>% separate(infoDtp, into = c("test1", "test2"),sep = "^[\d]]+")
test1 <- xmldf %>% separate(infoDtp, into = c("test1", "test2"),sep = "^[:digit:]+")
txt <- "Режим движения не изменялся30.2716959.946269Мест"
str_view(txt, "Р")
txt2 <- "Режим движения не изменялся31.2716958.946270Мест"
case1 <- 1
case2 <- 2
df1 <- tribble(
~case, ~info,
case1, txt1,
case2, txt2
)
txt1 <- "Режим движения не изменялся30.2716959.946269Мест"
txt2 <- "Режим движения не изменялся31.2716958.946270Мест"
df1 <- tribble(
~case, ~info,
case1, txt1,
case2, txt2
)
df1
df11 <- df1 %>% separate(info, sep = "Р")
df11 <- df1 %>% separate(info, into = с("col2", "col3") sep = "Р")
df11 <- df1 %>% separate(info, into = с("col2", "col3"), sep = "Р")
df11 <- df1 %>% separate(info, into = с("col2", "col3"), sep = "Р")
df11 <- df1 %>% separate(info, into = c("col1", "col2"), sep = "Р" )
df11
df1 <- xmldf$infoDtp
df1 <- head(df1, 10)
df1
df1 <- xmldf %>% select(date, infoDtp)
df1 <- head(df1, 10)
df1
df11 <- df1 %>% separate(infoDtp, into = c("test1", "test2"), sep = "Режим")
df11
View(df11)
text1 <- "Режим движения не изменялся30.2716959.946269Мест"
text2 <- "Режим движения не изменялся31.2716958.946269Мест"
text3 <- "Движение частично перекрыто30.13045559.999329Мест"
case1 <- 1
case2 <- 2
case3 <- 3
df1 <- tribble(
~case, ~info,
case1, text1,
case2, text2,
case3, text3
)
df1
df11 <- df1 %>% extract(info, c("text1", "coords"), "[a-zA-Z]")
df11 <- df1 %>% extract(info, c("text1"), "[a-zA-Z]")
df11 <- df1 %>% extract(info, c("text1", "text2"), "([a-zA-Z])", remove = FALSE)
df11 <- df1 %>% extract(info, c("text1", "text2"), "([a-zA-Z]) ([:digit:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1", "text2"), "([a-zA-Z]) ([:alnum:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1", "text2"), "([^A-z0-9]) ([:alnum:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1", "text2"), "([a-z]) ([:alnum:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1", "text2"), "([^a-z]) ([:alnum:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1", "text2"), "([A-z0-9]) ([:alnum:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "[A-z]", remove = FALSE)
df11 <- df1 %>% extract(info, c("text1"), "([A-z])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([0-9])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:])", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:alnum:]+)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.)", remove = TRUE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.)", remove = FALSE)
df11
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.[:digit:]+)", remove = FALSE)
df11
df12 <- df1 %>% separate(info, into = c("text1"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12
# create column to describe the driving mode after the accident
driving_mode <- xmldf %>% separate(infoDtp, into = c("text1"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
head(driving_mode)
# create column to describe the driving mode after the accident
driving_mode <- xmldf %>%
separate(infoDtp, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)") %>% select(text1)
head(driving_mode)
unique(driving_mode$text1)
# create column to describe the driving mode after the accident
driving_mode <- xmldf %>%
separate(infoDtp, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)([:digit:]+\\.[:digit:]+)") %>% select(text1)
head(driving_mode)
# create column to describe the driving mode after the accident
driving_mode <- xmldf %>%
separate(infoDtp, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)") %>% select(text1)
head(driving_mode)
unique(driving_mode$text1)
# create column to describe the driving mode after the accident
driving_mode <- xmldf %>%
separate(infoDtp, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
head(driving_mode)
driving_mode <- driving_mode %>%
separate(text1, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+)")
driving_mode <- driving_mode %>%
separate(text1, into = c("text1"),
sep = "([:digit:]+\\.[:digit:]+)") %>% select(text1)
head(driving_mode)
unique(driving_mode$text1)
xmldf <- xmldf %>% mutate(drv_mode = driving_mode)
str(driving_mode)
?cbind
xmldf <- cbind(xmldf, driving_mode)
### testing regex
text11 <- "Режим движения не изменялся30.2716959.946269Мест"
df1 <- tribble(
~case, ~info,
case1, text11,
case2, text2,
case3, text3
)
View(xmldf)
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.[:digit:]+)", remove = FALSE)
df11
xmldf$driving_mode <- xmldf$text1
View(xmldf)
xmldf <- xmldf %>% select(-text1)
## extract coordinates from infoDtp
coords_dtp <- xmldf %>%
select(date, infoDtp) %>%
extract(infoDtp, c("text1"),
"([:digit:]+\\.[:digit:]+\\.[:digit:]+)", remove = TRUE)
head(coords_dtp)
## extract coordinates from infoDtp
coords_dtp <- xmldf %>%
select(date, infoDtp) %>%
extract(infoDtp, c("text1"),
"([:digit:]+\\.[:digit:]+\\.[:digit:]+)", remove = TRUE) %>%
select(text1)
head(coords_dtp)
unique(coords_dtp)
head(coords_dtp)
xmldf <- cbind(xmldf, coords_dtp)
xmldf$coords_dtp <- xmldf$text1
xmldf <- xmldf %>% select(-text1)
df12 <- df1 %>% separate(info, into = c("text1"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12
df12 <- df1 %>% separate(info, into = c("text1", "text2", "text3"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12
xmldf$infoDtp[1]
xmldf$infoDtp[3]
xmldf$infoDtp[4]
### testing regex
text11 <- "Режим движения не изменялся30.2716959.946269Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуют73 23Магистральные дороги00г"
text2 <- "Режим движения не изменялся30.2716959.946269Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуют73 23Магистральные дороги00г"
text3 <- "Движение частично перекрыто30.13045559.999329Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуютПролетарский прМагистральные улицы"
df1 <- tribble(
~case, ~info,
case1, text11,
case2, text2,
case3, text3
)
df12 <- df1 %>% separate(info, into = c("text1", "text2", "text3"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12
df12 <- df1 %>% separate(info, into = c("text1", "text2"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12 <- df12 %>% select(case, text2)
df12
df13 <- df12 %>% extract(text2, c("text1"), "(\\())", remove = FALSE)
df13 <- df12 %>% extract(text2, c("text1"), "(\\()", remove = FALSE)
df13
df13 <- df12 %>% extract(text2, c("text1"), "([A-z])", remove = FALSE)
df13
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z])", remove = FALSE)
df13
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+)", remove = FALSE)
df13
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+\\()", remove = FALSE)
df13
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+)", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+\s)", remove = FALSE)
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+\\s)", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([:punct:])", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([^:punct:])", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([A-z]+[^:punct:])", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([A-z][^:punct:])", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+[^:punct:])", remove = FALSE)
df13$text1
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+[:punct:])", remove = FALSE)
df13$text1
df14 <- df13 %>% extract(text1, c("text1"), "[^A-z]+", remove = TRUE)
df14 <- df13 %>% extract(text1, c("text1"), "([^A-z]+)", remove = TRUE)
df14
df14 <- df13 %>% extract(text1, c("text1"), "([A-z]+)", remove = TRUE)
df14
df14 <- df13 %>% extract(text1, c("text1"), "([:alnum:]+)", remove = TRUE)
df14
df14$text1
df14 <- df13 %>% extract(text1, c("text1"), "([:alnum:]+[:alnum:]+)", remove = TRUE)
df14$text1
road_type <- xmldf %>% select(infoDtp) %>%
separate(infoDtp, into = c("text1", "text2"),
sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)") %>%
select(text2)
head(road_type)
View(road_type)
road_type <- road_type %>%
extract(text2, c("text1"), "([^A-z]+[:punct:])", remove = FALSE)
View(road_type)
road_type <- road_type %>%
extract(text1, c("text1"), "([:alnum:]+[:alnum:]+)", remove = TRUE)
View(road_type)
xmldf$road_type <- road_type$text1
### testing regex
text11 <- "Режим движения не изменялся30.2716959.946269Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуют73 23Магистральные дороги00г"
text22 <- "Режим движения не изменялся30.2716959.946269Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуют73 23Магистральные дороги00г"
text3 <- "Движение частично перекрыто30.13045559.999329Местного значения (дорога местного значения, включая относящиеся к собственности поселений, муниципальных районов, городских округов)Сведения отсутствуютПролетарский прМагистральные улицы"
case1 <- 1
case2 <- 2
case3 <- 3
df1 <- tribble(
~case, ~info,
case1, text11,
case2, text2,
case3, text3
)
df11 <- df1 %>% extract(info, c("text1"), "([:digit:]+\\.[:digit:]+\\.[:digit:]+)", remove = FALSE)
df12 <- df1 %>% separate(info, into = c("text1", "text2"), sep = "([:digit:]+\\.[:digit:]+\\.[:digit:]+)")
df12 <- df12 %>% select(case, text2)
df13 <- df12 %>% extract(text2, c("text1"), "([^A-z]+[:punct:])", remove = FALSE)
df14 <- df13 %>% extract(text1, c("text1"), "([:alnum:]+[:alnum:]+)", remove = TRUE)
df14$text1
unique(xmldf$road_type)
write.csv(xmldf, file = "raw_data.csv", sep = ",")
?write.csv
write.csv(xmldf, file = "raw_data.csv")
